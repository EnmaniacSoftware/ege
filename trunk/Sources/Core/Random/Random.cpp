#include "Core/Random/Random.h"

#ifdef EGE_RANDOM_C
#include "Core/Random/C/RandomC_p.h"
#endif // EGE_RANDOM_C

EGE_NAMESPACE

//--------------------------------------------------------------------------------------------------------------------------------------------------------------

EGE_DEFINE_NEW_OPERATORS(Random)
EGE_DEFINE_DELETE_OPERATORS(Random)

//--------------------------------------------------------------------------------------------------------------------------------------------------------------
Random::Random(u32 seed) : Object(NULL)
{
  m_p = ege_new RandomPrivate(this);
  if (m_p && (0 < seed))
  {
    setSeed(seed);
  }
}
//--------------------------------------------------------------------------------------------------------------------------------------------------------------
Random::~Random()
{
  EGE_DELETE(m_p);
}
//--------------------------------------------------------------------------------------------------------------------------------------------------------------
/*! Returns TRUE if object is valid. */
bool Random::isValid() const
{
  return NULL != m_p;
}
//--------------------------------------------------------------------------------------------------------------------------------------------------------------
/*! Returns randomly generated integer. */
s32 Random::rand()
{
  if (isValid())
  {
    return p_func()->rand();
  }

  return 0;
}
//--------------------------------------------------------------------------------------------------------------------------------------------------------------
/*! Sets random seed. */
void Random::setSeed(u32 seed)
{
  if (isValid())
  {
    p_func()->setSeed(seed);
  }

}
//--------------------------------------------------------------------------------------------------------------------------------------------------------------

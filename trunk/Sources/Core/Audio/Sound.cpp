#include "Core/Audio/Sound.h"

#ifdef EGE_PLATFORM_WIN32
  #ifdef EGE_AUDIO_OPENAL
    #include "Core/Audio/OpenAL/SoundOpenAL_p.h"
  #endif // EGE_AUDIO_OPENAL
#elif EGE_PLATFORM_AIRPLAY
  #include "Airplay/Audio/SoundAirplay_p.h"
#endif // EGE_PLATFORM_WIN32

EGE_NAMESPACE

//--------------------------------------------------------------------------------------------------------------------------------------------------------------

EGE_DEFINE_NEW_OPERATORS(Sound)
EGE_DEFINE_DELETE_OPERATORS(Sound)

//--------------------------------------------------------------------------------------------------------------------------------------------------------------
Sound::Sound(const PDataBuffer& data) : Object(NULL), 
                                        m_pitch(1.0f), 
                                        m_gain(1.0f), 
                                        m_looping(false)
{
  m_p = ege_new SoundPrivate(this, data);
}
//--------------------------------------------------------------------------------------------------------------------------------------------------------------
Sound::~Sound()
{
  EGE_DELETE(m_p);
}
//--------------------------------------------------------------------------------------------------------------------------------------------------------------
/*! Returns TRUE if object is valid. */
bool Sound::isValid() const
{
  if (m_p)
  {
    return m_p->isValid();
  }

  return false;
}
//--------------------------------------------------------------------------------------------------------------------------------------------------------------
/*! Sets pitch value. */
void Sound::setPitch(float32 value)
{
  m_pitch = value;
}
//--------------------------------------------------------------------------------------------------------------------------------------------------------------
/*! Sets gain value. */
void Sound::setGain(float32 value)
{
  m_gain = value;
}
//--------------------------------------------------------------------------------------------------------------------------------------------------------------
/*! Sets looping flag. */
void Sound::setLooping(bool set)
{
  m_looping = set;
}
//--------------------------------------------------------------------------------------------------------------------------------------------------------------

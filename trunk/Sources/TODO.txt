
FEATURES:

- Make possible to create multiple SceneManagers thru EGEngine
- OpenGL highest version detection and fallback mechanism for renderers
- RenderQueue:
  - seperate solid and transparent objects (based on material?) and depth-sort transparent ones

* Resources
  - Physical textures should be defined by 'texture' resources. All references should be done to 'texture-image' resources.
  - Resource loading/unloading should not be synchronous but more like request-wait-for-affirmation type
  - Resource loading in sperate thead
  - Rethink loading/unloading of resources and their dependencies (when to unload dependency ?)
  - Add ability to specify fix/variable rotation to textures etc (look into Ogre3D possibilities)

* Overlays/UI
  - Layouts

OPTIMIZATIONS:

- SceneNodeObject:
  - render components cache or map to quickly add them for rendering
  
- Camera
  - view matrix is calculated each time getViewMatrix is called as there is no information from PhysicsComponent regarding internal value changes
    This is not a big issue as this method should be called rather infrequently

- Files
  - write and read pointers are now the same, perhaps we can distinquish them

- Text Overlays
  - Indexed geometry

- Rendering
  - Early removal of geometry if its outside of clipping region

- UI
  - Dialogs (or widgets?) instead of tail should have some sort of decoration ?
  
CODING:

 - VertexBuffer/IndexBuffer sizes are determined by create method ONLY. Locks should not internally redefine size but return errror. Thats for when we want to update only several 
   entries at the begining or sth.
 - Re-design PhysicsManager. Add NULL physics
 - Re-design AudioManager. Add NULL audio.

ISSUES:

 - Game loop - accumulated updates should be applied to physicsmanager ONLY!!!!
 - PhysicsComponent -> TransformComponent
 - When getting positions the alignment (if present, make it always present ?) should be taken into considereation
 - Empty XML attribute value report error ?